# Copyright Fauna, Inc.
# SPDX-License-Identifier: MIT-0

openapi: "3.0.1"
info:
  title: "Multi-region AWS Step Functions with Fauna"
  version: "0.1.0"
paths:
  /chats/{chatID}/messages:
    post:
      parameters:
      - name: "chatID"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "200":
          description: "200 response"
          content: {}
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [RestApiRole, Arn]
        type: "aws"
        httpMethod: POST
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          "200":
            statusCode: "200"
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
          "400":
            statusCode: "400"
        requestTemplates:
          application/json:
            Fn::Sub: |-
              #set($chatID = $util.escapeJavaScript($input.params('chatID')))
              #set($language = $util.escapeJavaScript($input.json('$.language')))
              #set($text = $util.escapeJavaScript($input.json('$.text')))

              {
                "input": "{\"chatID\":$chatID,\"language\":$language,\"text\":$text}",
                "stateMachineArn": "${SendMessageStateMachine}"
              }
        passthroughBehavior: "when_no_templates"
  /chats/{chatID}/messages/{language}:
    get:
      parameters:
      - name: "lastSeenAt"
        in: "query"
        schema:
          type: "number"
      - name: "chatID"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "language"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "200":
          description: "200 response"
          content: {}
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: [RestApiRole, Arn]
        type: "aws"
        httpMethod: POST
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution
        responses:
          "200":
            statusCode: "200"
            responseTemplates:
              application/json: $util.parseJson($input.json('$.output'))
          "400":
            statusCode: "400"
        requestTemplates:
          application/json:
            Fn::Sub: |-
              #set($chatID = $util.escapeJavaScript($input.params('chatID')))
              #set($language = $util.escapeJavaScript($input.params('language')))
              #if($util.isNumber($input.params('lastSeenAt')))
                #set($lastSeenAt = $input.params('lastSeenAt'))
              #else
                #set($lastSeenAt = 0)
              #end

              {
                "input": "{\"chatID\":$chatID,\"language\":\"$language\",\"lastSeenAt\":$lastSeenAt}",
                "stateMachineArn": "${GetNewMessagesStateMachine}"
              }

            # The following works when the querystring parameter IS NOT provided.
            # Fn::Sub: |-
            #   #set($chatID = $util.escapeJavaScript($input.params('chatID')))
            #   #set($language = $util.escapeJavaScript($input.params('language')))
            #   #set($lastSeenAt = $util.escapeJavaScript($input.params('lastSeenAt')))

            #   {
            #     "input": "{\"chatID\":$chatID,\"language\":\"$language\",\"lastSeenAt\":\"$lastSeenAt\"}",
            #     "stateMachineArn": "${GetNewMessagesStateMachine}"
            #   }

            # The following works when the querystring parameter IS provided
            # Fn::Sub: |-
            #   #set($chatID = $util.escapeJavaScript($input.params('chatID')))
            #   #set($language = $util.escapeJavaScript($input.params('language')))
            #   #set($lastSeenAt = $util.escapeJavaScript($input.params('lastSeenAt')))

            #   {
            #     "input": "{\"chatID\":$chatID,\"language\":\"$language\",\"lastSeenAt\":$lastSeenAt}",
            #     "stateMachineArn": "${GetNewMessagesStateMachine}"
            #   }
        passthroughBehavior: "when_no_templates"
components: {}
